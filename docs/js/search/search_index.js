var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.291,1,1.822]],["body/controllers/AppController.html",[0,1.86,1,2.624,2,1.409,3,0.449,4,0.386,5,0.386,6,2.655,7,0.586,8,1.673,9,4.171,10,1.571,11,0.04,12,3.234,13,4.268,14,3.504,15,4.268,16,4.268,17,0.83,18,3.234,19,1.267,20,0.762,21,0.743,22,3.504,23,2.273,24,1.267,25,2.322,26,2.655,27,3.234,28,0.449,29,0.067,30,1.761,31,1.571,32,2.655,33,1.267,34,3.234,35,0.029,36,0.029]],["title/modules/AppModule.html",[37,1.161,38,1.822]],["body/modules/AppModule.html",[1,2.744,2,1.699,3,0.392,4,0.337,5,0.337,11,0.04,20,0.831,21,0.65,25,2.535,26,2.321,28,0.392,29,0.059,35,0.027,36,0.027,37,1.528,38,3.503,39,1.232,40,1.699,41,2.321,42,2.321,43,2.321,44,2.84,45,2.273,46,2.84,47,2.123,48,1.54,49,1.54,50,2.828,51,2.397,52,2.741,53,2.828,54,2.828,55,2.828,56,2.828]],["title/injectables/AppService.html",[25,1.44,57,0.847]],["body/injectables/AppService.html",[3,0.462,4,0.397,5,0.397,7,0.604,8,1.705,9,3.572,11,0.04,14,3.572,17,0.855,19,1.305,20,0.531,21,0.765,25,2.114,28,0.462,29,0.069,33,1.305,35,0.03,36,0.03,57,1.244,58,1.618,59,2.733,60,4.351,61,2.09,62,3.329,63,1.451,64,1.175,65,0.855,66,1.175,67,4.351,68,4.351,69,3.329,70,2.34,71,3.329,72,3.329]],["title/controllers/AuthController.html",[0,1.291,73,1.822]],["body/controllers/AuthController.html",[0,0.95,2,0.95,3,0.303,4,0.26,5,0.26,7,0.395,8,1.268,10,1.573,11,0.041,17,0.831,19,1.268,20,0.81,21,0.501,22,3.168,23,1.533,24,0.854,28,0.303,29,0.045,30,1.187,31,1.059,32,2.657,33,1.268,35,0.022,36,0.022,63,1.41,64,1.142,65,0.831,66,1.142,73,1.99,74,1.79,75,1.79,76,2.18,77,3.002,78,3.236,79,1.79,80,2.603,81,2.18,82,3.236,83,3.236,84,3.236,85,2.275,86,3.236,87,3.236,88,2.18,89,2.657,90,2.18,91,1.65,92,2.18,93,3.236,94,3.236,95,2.657,96,2.657,97,2.18,98,2.18,99,1.79,100,2.18,101,2.18,102,2.657,103,1.79,104,1.79,105,1.059,106,2.657,107,1.79,108,1.875,109,1.79,110,1.187,111,1.79,112,1.79,113,1.79,114,1.533,115,2.18,116,2.18,117,2.18,118,2.18,119,2.18,120,2.18,121,2.18,122,1.79,123,2.18,124,2.18]],["title/modules/AuthModule.html",[37,1.161,44,1.613]],["body/modules/AuthModule.html",[2,1.642,3,0.374,4,0.321,5,0.321,11,0.041,20,0.841,21,0.619,28,0.374,29,0.056,35,0.026,36,0.026,37,1.477,39,1.173,40,1.642,44,3.016,45,2.239,47,2.052,48,1.466,49,1.466,51,2.317,52,2.649,73,2.673,105,1.309,108,2.496,109,2.21,125,2.21,126,2.21,127,2.693,128,2.797,129,2.693,130,2.693,131,2.21,132,2.693,133,1.893,134,2.21,135,2.693,136,2.21,137,2.21,138,1.466,139,2.693,140,2.693,141,2.21,142,2.693,143,2.693,144,2.693]],["title/injectables/AuthService.html",[57,0.847,108,1.44]],["body/injectables/AuthService.html",[3,0.32,4,0.275,5,0.275,7,0.418,8,1.322,11,0.041,17,0.866,19,0.904,20,0.777,21,0.53,28,0.32,29,0.048,31,1.639,33,0.904,35,0.023,36,0.023,57,0.965,58,1.121,63,1.47,64,1.191,65,0.866,66,1.191,77,2.371,79,2.769,80,2.656,85,1.622,89,2.769,91,1.268,108,1.639,110,1.256,111,1.894,112,1.894,113,1.894,133,1.622,145,1.894,146,2.452,147,2.371,148,1.622,149,1.72,150,5.037,151,2.307,152,2.371,153,2.307,154,1.894,155,1.622,156,2.371,157,3.373,158,2.452,159,1.938,160,2.172,161,2.074,162,1.622,163,2.769,164,2.371,165,3.373,166,3.373,167,3.373,168,3.373,169,2.307,170,2.371,171,1.418,172,2.307]],["title/classes/CreateUserDto.html",[29,0.062,173,1.44]],["body/classes/CreateUserDto.html",[3,0.292,4,0.251,5,0.251,7,0.382,10,2.184,11,0.039,17,1.154,20,0.503,24,0.825,28,0.292,29,0.066,35,0.021,36,0.021,61,1.972,64,1.334,65,1.154,66,1.113,70,2.217,91,1.334,159,2.184,160,2.448,173,1.532,174,1.023,175,3.873,176,1.48,177,1.532,178,3.16,179,2.657,180,3.69,181,3.873,182,3.153,183,3.682,184,3.153,185,2.105,186,2.105,187,2.105,188,2.105,189,2.105,190,2.588,191,3.153,192,2.105,193,2.105,194,3.153,195,3.153,196,2.105,197,2.105,198,2.105,199,2.105,200,3.317,201,3.153,202,2.588,203,3.69,204,2.105,205,2.105,206,3.69,207,2.105,208,1.48,209,2.448,210,2.105,211,1.728,212,1.728,213,2.105,214,2.105,215,2.105,216,1.728]],["title/injectables/JwtStrategy.html",[57,0.847,128,1.613]],["body/injectables/JwtStrategy.html",[3,0.354,4,0.304,5,0.304,7,0.462,8,1.421,11,0.041,17,0.931,19,1,20,0.733,21,0.586,28,0.354,29,0.053,30,1.389,31,1.239,33,1,35,0.025,36,0.025,57,1.037,58,1.239,61,1,63,1.581,64,1.28,65,1.18,66,1.28,91,1.461,105,1.239,128,1.975,138,1.389,141,2.094,146,2.595,147,1.793,148,1.793,149,1.802,152,2.55,154,2.977,155,1.793,158,1.568,159,1.763,161,1.568,162,1.793,163,2.094,164,1.793,170,1.793,171,1.568,217,2.094,218,3.627,219,2.55,220,3.627,221,3.627,222,2.55,223,2.55,224,2.094,225,2.55,226,2.55,227,2.55,228,2.094,229,1.793,230,2.55,231,2.55,232,2.55,233,2.55,234,2.55,235,2.094,236,2.55,237,2.55,238,2.55,239,2.55,240,2.55]],["title/classes/LoginDto.html",[29,0.062,80,1.613]],["body/classes/LoginDto.html",[3,0.411,4,0.354,5,0.354,7,0.537,10,1.957,11,0.04,17,1.034,20,0.642,24,1.162,28,0.411,29,0.084,35,0.027,36,0.027,61,1.923,65,1.034,80,2.193,159,2.493,160,2.793,174,1.441,177,1.957,181,4.027,183,3.449,200,3.215,202,3.306,203,3.754,206,3.754,208,2.084,209,2.193,211,3.306,212,3.306,241,2.433,242,2.964,243,4.027,244,2.964,245,2.964,246,4.027,247,2.964]],["title/classes/LoginResponseDto.html",[29,0.062,110,1.613]],["body/classes/LoginResponseDto.html",[3,0.424,4,0.365,5,0.365,7,0.555,10,1.998,11,0.04,17,1.056,20,0.656,24,1.199,28,0.424,29,0.064,35,0.028,36,0.028,61,1.612,65,1.056,77,2.891,85,3.266,91,1.697,95,3.376,96,3.376,107,2.511,110,2.239,138,2.239,174,1.486,177,1.998,180,3.376,183,2.891,200,3.266,209,2.239,248,3.814,249,2.511,250,4.112,251,4.112,252,4.112,253,3.058,254,4.112,255,3.058]],["title/modules/PrismaModule.html",[37,1.161,45,1.291]],["body/modules/PrismaModule.html",[3,0.471,4,0.405,5,0.405,11,0.039,20,0.703,21,0.78,28,0.471,29,0.071,35,0.03,36,0.03,37,1.727,39,1.48,40,1.921,45,2.44,47,2.4,48,1.849,49,1.849,51,2.71,149,2.297,256,2.788,257,2.788,258,2.788,259,3.396,260,4.407,261,3.396]],["title/injectables/PrismaService.html",[57,0.847,149,1.161]],["body/injectables/PrismaService.html",[3,0.419,4,0.36,5,0.36,7,0.547,8,1.597,11,0.04,17,1.046,19,1.597,20,0.65,21,0.693,28,0.419,29,0.063,35,0.028,36,0.028,57,1.165,58,1.466,63,1.315,64,1.065,65,0.775,66,1.065,146,3.343,149,1.597,161,2.506,229,2.865,262,2.477,263,4.615,264,4.075,265,5.318,266,4.075,267,4.942,268,3.017,269,2.477,270,3.017,271,2.477,272,3.017,273,3.017,274,3.017,275,3.017]],["title/classes/UpdateUserDto.html",[29,0.062,276,1.613]],["body/classes/UpdateUserDto.html",[3,0.552,4,0.474,5,0.474,11,0.039,20,0.776,24,1.558,28,0.552,29,0.083,35,0.033,36,0.033,173,1.932,174,1.932,176,2.795,229,2.795,276,2.651,277,3.264,278,3.976,279,2.795,280,2.795,281,3.976]],["title/classes/User.html",[29,0.062,91,0.942]],["body/classes/User.html",[3,0.391,4,0.336,5,0.336,7,0.511,11,0.039,17,1.397,28,0.391,29,0.059,35,0.026,36,0.026,61,2.191,64,1.571,65,1.397,66,1.92,91,1.236,159,2.164,160,2.424,174,1.369,177,1.889,178,3.13,179,3.13,190,3.191,282,2.312,283,4.452,284,3.13,285,4.452,286,2.816,287,4.801,288,2.816,289,2.816,290,2.816,291,2.816,292,2.816,293,2.816,294,2.816]],["title/controllers/UsersController.html",[0,1.291,295,1.822]],["body/controllers/UsersController.html",[0,0.859,2,0.859,3,0.273,4,0.235,5,0.235,7,0.357,8,1.175,10,2.122,11,0.041,17,1.121,19,1.712,20,0.733,21,0.453,23,1.385,24,0.772,28,0.273,29,0.041,30,1.073,31,0.958,33,1.712,35,0.02,36,0.02,61,1.979,63,1.769,64,1.432,65,1.042,66,1.432,75,1.618,99,2.462,102,2.981,103,1.618,104,1.618,105,0.958,106,3.585,122,3.332,171,1.212,173,2.236,276,2.684,279,2.108,280,2.108,284,3.234,295,1.844,296,1.618,297,1.97,298,3.332,299,2.462,300,2.462,301,2.462,302,1.97,303,1.97,304,1.97,305,1.97,306,1.618,307,1.97,308,1.97,309,1.618,310,1.97,311,1.97,312,1.618,313,1.97,314,1.97,315,1.97,316,1.97,317,1.765,318,1.618,319,1.618,320,1.618,321,1.97,322,1.97,323,1.97,324,1.97,325,1.97,326,1.97,327,1.97,328,1.97,329,1.97,330,1.97,331,1.97,332,1.97,333,1.97,334,1.97]],["title/modules/UsersModule.html",[37,1.161,46,1.613]],["body/modules/UsersModule.html",[2,1.787,3,0.423,4,0.363,5,0.363,11,0.04,20,0.825,21,0.699,28,0.423,29,0.063,35,0.028,36,0.028,37,1.607,39,1.327,40,1.787,45,2.324,46,3.017,47,2.233,48,1.658,49,1.658,51,2.521,52,2.882,105,1.479,131,2.499,134,2.499,136,2.499,137,2.499,138,1.658,295,2.85,317,2.591,318,2.499,335,2.499,336,3.044,337,2.499,338,3.044,339,3.044]],["title/injectables/UsersService.html",[57,0.847,317,1.44]],["body/injectables/UsersService.html",[3,0.233,4,0.2,5,0.2,7,0.304,8,1.037,11,0.041,17,1.106,19,1.588,20,0.687,21,0.385,28,0.233,29,0.035,30,0.913,31,0.815,33,1.588,35,0.018,36,0.018,57,0.757,58,0.815,61,1.885,63,1.766,64,1.592,65,1.041,66,1.43,91,0.841,146,3.262,147,1.179,148,1.179,149,1.459,152,1.861,155,1.179,156,1.861,158,1.627,159,1.286,160,1.785,161,2.492,162,1.179,173,1.809,178,1.861,179,1.861,216,3.837,224,3.327,235,2.692,276,2.027,279,1.861,280,1.861,284,3.17,298,3.057,299,2.173,300,2.173,301,2.173,306,2.173,309,2.173,312,2.173,317,1.286,319,1.377,320,1.377,340,1.377,341,1.677,342,2.647,343,1.677,344,4.307,345,1.677,346,1.677,347,1.677,348,1.677,349,1.677,350,3.723,351,1.677,352,1.677,353,1.677,354,2.647,355,1.677,356,1.677,357,1.677,358,1.677,359,1.677,360,1.677,361,1.677,362,1.677]],["title/coverage.html",[363,2.83]],["body/coverage.html",[0,1.903,1,1.669,5,0.324,6,2.228,11,0.04,25,1.319,29,0.104,35,0.026,36,0.026,57,1.422,59,2.228,65,0.697,73,1.669,74,2.228,80,1.478,91,0.863,108,1.319,110,1.478,114,1.908,128,1.478,145,2.228,149,1.064,164,1.908,173,1.319,175,2.228,176,2.664,217,2.228,241,2.228,248,2.228,249,2.228,262,2.228,276,1.478,277,2.228,282,2.228,295,1.669,296,2.228,317,1.319,340,2.228,363,1.908,364,2.714,365,2.714,366,2.714,367,5.771,368,3.79,369,5.15,370,2.228,371,2.228,372,2.714,373,4.366,374,2.228,375,2.714,376,2.228,377,3.79,378,2.714,379,2.714,380,2.714,381,2.714]],["title/dependencies.html",[40,1.551,382,2.039]],["body/dependencies.html",[11,0.041,21,0.754,24,1.286,29,0.09,35,0.029,36,0.029,40,1.43,105,1.594,133,2.306,138,1.787,156,2.306,208,2.306,228,3.95,271,2.693,383,4.812,384,3.281,385,3.281,386,3.281,387,3.281,388,4.309,389,3.281,390,4.309,391,3.281,392,3.281,393,3.281,394,3.281,395,3.281,396,3.281,397,3.281,398,3.281,399,3.281,400,3.281,401,3.281,402,3.281,403,3.281,404,3.281,405,3.281,406,3.281,407,3.281]],["title/miscellaneous/functions.html",[408,1.527,409,2.921]],["body/miscellaneous/functions.html",[7,0.796,11,0.035,35,0.035,36,0.035,374,3.603,376,4.506,408,2.698,409,3.603,410,4.389]],["title/index.html",[7,0.45,411,2.483,412,2.483]],["body/index.html",[4,0.339,11,0.04,35,0.027,36,0.027,70,1.996,209,1.546,269,2.331,363,1.996,413,2.84,414,2.84,415,3.91,416,2.84,417,2.84,418,2.84,419,2.84,420,2.84,421,4.472,422,2.84,423,2.84,424,2.84,425,2.84,426,5.351,427,2.84,428,2.84,429,5.223,430,2.84,431,2.84,432,3.91,433,2.84,434,2.84,435,2.84,436,2.84,437,3.91,438,3.91,439,2.84,440,2.84,441,2.84,442,3.91,443,3.91,444,2.84,445,2.84,446,2.84,447,2.84,448,2.84,449,2.331,450,2.84,451,2.84,452,2.84,453,2.84,454,2.84,455,2.84,456,2.84,457,2.84,458,2.84,459,2.84,460,2.331,461,2.84,462,2.84,463,2.84,464,2.84,465,2.84,466,2.84,467,2.331]],["title/modules.html",[39,1.754]],["body/modules.html",[11,0.033,35,0.033,36,0.033,38,2.488,39,1.764,44,2.204,45,1.764,46,2.204,449,4.528,468,5.516,469,5.516,470,5.516]],["title/overview.html",[471,3.304]],["body/overview.html",[2,1.253,11,0.039,25,2.188,35,0.027,36,0.027,38,3.451,39,1.253,40,1.719,41,2.361,42,2.361,43,2.361,44,3.021,45,2.383,46,2.924,47,2.148,48,1.566,49,1.566,58,1.398,108,2.188,125,2.361,126,2.361,128,2.451,149,2.104,174,1.398,256,2.361,257,2.361,258,2.361,317,2.188,335,2.361,337,2.361,471,2.361,472,2.876,473,2.876,474,3.944]],["title/properties.html",[177,1.729,382,2.039]],["body/properties.html",[11,0.04,35,0.035,36,0.035,177,2.092,209,2.344,460,3.534,467,3.534,475,4.305,476,4.305,477,4.305]],["title/miscellaneous/variables.html",[408,1.527,478,2.921]],["body/miscellaneous/variables.html",[7,0.696,11,0.04,33,1.505,35,0.032,36,0.032,91,1.514,114,3.349,158,2.93,170,2.699,171,2.361,370,3.152,371,3.911,408,2.361,478,3.152,479,3.84,480,3.84,481,3.84,482,3.84,483,3.84,484,3.84,485,3.84,486,3.84,487,3.84]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":476,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":352,"title":{},"body":{"injectables/UsersService.html":{}}}],["12",{"_index":213,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["12'})@length(13",{"_index":185,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["123.123.123",{"_index":184,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["14",{"_index":215,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["14)@isstring()@isnotempty",{"_index":186,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["24h",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["3",{"_index":473,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":472,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":474,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["abc123456",{"_index":212,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["abc123456'})@isstring()@isnotempty",{"_index":198,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["address",{"_index":243,"title":{},"body":{"classes/LoginDto.html":{}}}],["admin",{"_index":191,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["amazing",{"_index":450,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["apiproperty",{"_index":200,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":180,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('status",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":321,"title":{},"body":{"controllers/UsersController.html":{}}}],["aplicação",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":269,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":275,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":420,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":38,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":25,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["autenticado",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":73,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":240,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authentication",{"_index":246,"title":{},"body":{"classes/LoginDto.html":{}}}],["authguard",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["authmodule",{"_index":44,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":460,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":108,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":451,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["bcrypt",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(dto.password",{"_index":351,"title":{},"body":{"injectables/UsersService.html":{}}}],["body",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":190,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":470,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":468,"title":{},"body":{"modules.html":{}}}],["bruce",{"_index":195,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bruce@wayne.com",{"_index":211,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["bruce@wayne.com'})@isstring()@isnotempty()@isemail",{"_index":188,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["building",{"_index":416,"title":{},"body":{"index.html":{}}}],["class",{"_index":29,"title":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":174,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":256,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":258,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":257,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":335,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":336,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":337,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["com",{"_index":361,"title":{},"body":{"injectables/UsersService.html":{}}}],["const",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":322,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":363,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":178,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["create",{"_index":279,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":323,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":302,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(dto",{"_index":342,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdat",{"_index":283,"title":{},"body":{"classes/User.html":{}}}],["createparamdecorator((_",{"_index":482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":173,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ctx",{"_index":483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["dados",{"_index":254,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":350,"title":{},"body":{"injectables/UsersService.html":{}}}],["date",{"_index":287,"title":{},"body":{"classes/User.html":{}}}],["de",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletado",{"_index":360,"title":{},"body":{"injectables/UsersService.html":{}}}],["delete",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":40,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":209,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":428,"title":{},"body":{"index.html":{}}}],["docs",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["doesn`t",{"_index":238,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dto",{"_index":344,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/create",{"_index":319,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/login",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":320,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":439,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":417,"title":{},"body":{"index.html":{}}}],["email",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["enableshutdownhooks",{"_index":264,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":266,"title":{},"body":{"injectables/PrismaService.html":{}}}],["entities/user.entity",{"_index":349,"title":{},"body":{"injectables/UsersService.html":{}}}],["example",{"_index":183,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["executioncontext",{"_index":484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":239,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":260,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":229,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":226,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":233,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":235,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":298,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":299,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":327,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":306,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":415,"title":{},"body":{"index.html":{}}}],["function",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":409,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gerado",{"_index":250,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":326,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apioperation({summary",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["getstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getstatus(baseurl",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":411,"title":{"index.html":{}},"body":{}}],["grow",{"_index":446,"title":{},"body":{"index.html":{}}}],["here",{"_index":457,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":464,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":284,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":234,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":272,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":267,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":57,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":425,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":427,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadmin",{"_index":179,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["isboolean",{"_index":201,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":202,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["ishashvalid",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":203,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isnumber",{"_index":204,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ispositive",{"_index":205,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":206,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":245,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@isemail()@apiproperty({description",{"_index":242,"title":{},"body":{"classes/LoginDto.html":{}}}],["join",{"_index":453,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":232,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":128,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":461,"title":{},"body":{"index.html":{}}}],["length",{"_index":207,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(13",{"_index":214,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["license",{"_index":467,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":443,"title":{},"body":{"index.html":{}}}],["literal",{"_index":221,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["logged",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":80,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":110,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["matching",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":359,"title":{},"body":{"injectables/UsersService.html":{}}}],["metadata",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":408,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":442,"title":{},"body":{"index.html":{}}}],["mode",{"_index":432,"title":{},"body":{"index.html":{}}}],["module",{"_index":37,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":39,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":456,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":462,"title":{},"body":{"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["name`s",{"_index":194,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["nest",{"_index":421,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":466,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["netflix",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["new",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["node.js",{"_index":414,"title":{},"body":{"index.html":{}}}],["npm",{"_index":426,"title":{},"body":{"index.html":{}}}],["number",{"_index":182,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["o",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["onmoduleinit",{"_index":265,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":444,"title":{},"body":{"index.html":{}}}],["optional",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":471,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":382,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":316,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partial",{"_index":356,"title":{},"body":{"injectables/UsersService.html":{}}}],["partialtype",{"_index":278,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":281,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":228,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":225,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":230,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":315,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{}}}],["payload",{"_index":223,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":237,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pelo",{"_index":251,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["please",{"_index":454,"title":{},"body":{"index.html":{}}}],["post",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["prisma.service",{"_index":261,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":271,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":263,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":45,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":149,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_secret",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":434,"title":{},"body":{"index.html":{}}}],["profile",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":413,"title":{},"body":{"index.html":{}}}],["project",{"_index":445,"title":{},"body":{"index.html":{}}}],["promise",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["properties",{"_index":177,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/User.html":{},"properties.html":{}}}],["providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["read",{"_index":455,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["realizar",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["recebendo",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["reflect",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":300,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":309,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":424,"title":{},"body":{"index.html":{}}}],["request",{"_index":485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response.dto",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":249,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:10",{"_index":253,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:15",{"_index":255,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["results",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["return",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":429,"title":{},"body":{"index.html":{}}}],["running",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":418,"title":{},"body":{"index.html":{}}}],["secret",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":236,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":354,"title":{},"body":{"injectables/UsersService.html":{}}}],["server",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"index.html":{}}}],["side",{"_index":419,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":448,"title":{},"body":{"index.html":{}}}],["src/.../logged",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":410,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:37",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":248,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":241,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":244,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:20",{"_index":247,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":217,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":222,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":219,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":370,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":259,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":262,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":268,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":270,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/dto/create",{"_index":175,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":277,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["src/users/entities/user.entity.ts",{"_index":282,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:2",{"_index":290,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:3",{"_index":292,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":289,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":293,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":286,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":291,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":288,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":294,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":296,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:23",{"_index":303,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:30",{"_index":305,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":308,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":314,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:51",{"_index":311,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":338,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":340,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:12",{"_index":343,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":345,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:42",{"_index":346,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:50",{"_index":348,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:58",{"_index":347,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":341,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":430,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":433,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":435,"title":{},"body":{"index.html":{}}}],["started",{"_index":412,"title":{"index.html":{}},"body":{}}],["starter",{"_index":423,"title":{},"body":{"index.html":{}}}],["statements",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":458,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":227,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["sucesso",{"_index":362,"title":{},"body":{"injectables/UsersService.html":{}}}],["summary",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["super",{"_index":231,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":449,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":469,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":438,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":441,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":440,"title":{},"body":{"index.html":{}}}],["tests",{"_index":437,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":447,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":273,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":274,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getstatus('http://localhost:3333",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.sign",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.create",{"_index":353,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":358,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":355,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":357,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":324,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":325,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["token",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado_automaticamente",{"_index":252,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["touch",{"_index":459,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["true})@isboolean",{"_index":192,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["twitter",{"_index":465,"title":{},"body":{"index.html":{}}}],["type",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typescript",{"_index":422,"title":{},"body":{"index.html":{}}}],["ui",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('user",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["unit",{"_index":436,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":224,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":477,"title":{},"body":{"properties.html":{}}}],["update",{"_index":301,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":312,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":285,"title":{},"body":{"classes/User.html":{}}}],["updateuserdto",{"_index":276,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["useguards",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@delete(':id",{"_index":310,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@get",{"_index":304,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@get(':id",{"_index":307,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@patch(':id",{"_index":313,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":91,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.decorator",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.decorator.ts",{"_index":371,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":280,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":176,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:19",{"_index":197,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":189,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":199,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:45",{"_index":187,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":193,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user`s",{"_index":181,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["users",{"_index":297,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":339,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":318,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":295,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":46,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":317,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["validate",{"_index":218,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":220,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":208,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":478,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":475,"title":{},"body":{"properties.html":{}}}],["visualizar",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["watch",{"_index":431,"title":{},"body":{"index.html":{}}}],["wayne",{"_index":210,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["wayne'})@isstring()@isnotempty",{"_index":196,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["website",{"_index":463,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":452,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Visualizar status da aplicação',\n  })\n  getStatus() {\n    return this.appService.getStatus('http://localhost:3333');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [PrismaModule, UsersModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getStatus(baseUrl: string) {\n    return {\n      status: 'Netflix Server is running! 🚀',\n      docs: baseUrl + '/api',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         { user: User; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/users/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return { user };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n  async login(loginDto: LoginDto): Promise {\n    const { email, password } = loginDto;\n\n    const user = await this.prisma.user.findUnique({ where: { email } });\n    if (!user) {\n      throw new UnauthorizedException('User and/or password is invalid');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n    if (!isHashValid) {\n      throw new UnauthorizedException('User and/or password is invalid');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ email }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CPF\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CPF\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s CPF number', example: '123.123.123-12'})@Length(13, 14)@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s email', example: 'bruce@wayne.com'})@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'If user is admin of server', example: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name`s user', example: 'Bruce Wayne'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s password', example: '@Abc123456'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsPositive,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'Name`s user',\n    example: 'Bruce Wayne',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    description: 'User`s email',\n    example: 'bruce@wayne.com',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    description: 'User`s password',\n    example: '@Abc123456',\n  })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty({\n    description: 'User`s CPF number',\n    example: '123.123.123-12',\n  })\n  @Length(13, 14)\n  @IsString()\n  @IsNotEmpty()\n  CPF: string;\n\n  @ApiProperty({\n    description: 'If user is admin of server',\n    example: true,\n  })\n  @IsBoolean()\n  isAdmin?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Either the user doesn`t exist or is not authenticated',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()@ApiProperty({description: 'User`s email address', example: 'bruce@wayne.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'User`s password for authentication', example: '@Abc123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    description: 'User`s email address',\n    example: 'bruce@wayne.com',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'User`s password for authentication',\n    example: '@Abc123456',\n  })\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/users/entities/user.entity';\n\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CPF\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CPF\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    id?: string;\n    name: string;\n    email: string;\n    password: string;\n    CPF: string;\n    isAdmin?: boolean;\n    createdAt?: Date;\n    updatedAt?: Date; \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UsersService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateUserDto) {\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n    return await this.prisma.user.create({\n      data,\n      select: {\n        name: true,\n        email: true,\n        CPF: true,\n        isAdmin: true,\n        password: false,\n      },\n    });\n  }\n\n  async findAll() {\n    return await this.prisma.user.findMany({\n      select: {\n        id: true,\n        name: true,\n        email: true,\n        CPF: false,\n        isAdmin: true,\n        password: false,\n      },\n    });\n  }\n\n  async findOne(id: string) {\n    return await this.prisma.user.findUnique({\n      where: {\n        id,\n      },\n    });\n  }\n\n  async update(id: string, dto: UpdateUserDto) {\n    const data: Partial = { ...dto };\n    return this.prisma.user.update({\n      where: { id },\n      data,\n    });\n  }\n\n  async remove(id: string) {\n    await this.prisma.user.delete({\n      where: {\n        id,\n      },\n    });\n    return { message: 'Deletado com sucesso' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/passport : ^8.2.2\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^4.0.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
